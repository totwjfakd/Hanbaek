{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["PostComponent","PostList","useState","postName","like","likeChange","className","onClick","App","to","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,I,2BCWf,SAASA,IACP,OAEE,kKAGJ,SAASC,IAAY,IAAD,EACeC,mBAAS,CAAC,yCAAY,IAAK,MAD1C,mBACbC,EADa,aAIOD,mBAAS,IAJhB,mBAIbE,EAJa,KAIPC,EAJO,KAKlB,OAEE,gCACE,sBAAKC,UAAU,OAAf,UACE,mCAAMH,EAAS,GAAf,IAAmB,wBAAQI,QAAS,WAAQF,EAAWD,EAAO,IAA3C,0BAAnB,IAAiFA,EAAjF,OACA,8DACA,0BAEF,sBAAKE,UAAU,OAAf,UACE,mCAAMH,EAAS,GAAf,IAAmB,gDAAnB,SACA,8DACA,0BAEF,sBAAKG,UAAU,OAAf,UACE,mCAAMH,EAAS,GAAf,IAAmB,gDAAnB,SACA,8DACA,6BAmEOK,MA9Df,WAiBE,OACE,sBAAKF,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sDAMF,eAAC,IAAD,WACE,mCACA,cAAC,IAAD,CAAMG,GAAG,IAAT,SACI,8CAIF,cAAC,IAAD,CAAMA,GAAG,QAAT,SACE,6DAMJ,uBACA,iCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWX,IACjC,cAAC,IAAD,CAAOU,KAAK,QAAQC,UAAWZ,cC1E1Ba,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1Bb,M","file":"static/js/main.3d9e899f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable */\n// warning이 뜨지 않음\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Link, Route } from 'react-router-dom' //****\n\n//import { Route } from 'workbox-routing';\n\n\n\nfunction PostComponent() {\n  return (\n\n    <div>새로운 컴포넌트, 글이 자리잡을 컴포넌트 입니다.</div>\n  );\n}\nfunction PostList() {\n  let [postName, postNameChange] = useState(['남자 코트 추천', '1', '2']); // [a, b] array 생성  [state 데이터, state 데이터 변경 함수]\n  // state의 장점 : react를 웹 앱처럼 동작하게 만들경우\n  // 데이터를 변경해도 바로바로 바뀜. 새로고침 없이 재랜더링 가능\n  let [like, likeChange] = useState(0);\n  return (\n    \n    <div>\n      <div className=\"list\">\n        <h3> {postName[0]} <button onClick={() => { likeChange(like + 1) }}>👍</button> {like} </h3>\n        <p>2월 17일 발행</p>\n        <hr />\n      </div>\n      <div className=\"list\">\n        <h3> {postName[1]} <span>👍</span> 0 </h3>\n        <p>2월 17일 발행</p>\n        <hr />\n      </div>\n      <div className=\"list\">\n        <h3> {postName[2]} <span>👍</span> 0 </h3>\n        <p>2월 17일 발행</p>\n        <hr />\n      </div>\n    </div>\n  );\n}\nfunction App() { //component\n\n\n\n\n\n  function changePostName() {\n    let newArray = [...postName];\n    newArray[0] = '여자 코트 추천';\n\n\n    postNameChange(newArray);\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <div >\n          개발 Blog\n            </div>\n      </div>\n\n      \n      <BrowserRouter>\n        <header>\n        <Link to=\"/\">\n            <button>\n              홈\n          </button>\n          </Link>\n          <Link to=\"/page\">\n            <button>\n              글이동\n          </button>\n          </Link>\n          \n        </header>\n        <hr/>\n        <body>\n          <Route exact path=\"/\" component={PostList} />\n          <Route path=\"/page\" component={PostComponent} />\n        </body>\n      </BrowserRouter>\n\n\n    </div>\n  );\n}\n\nfunction Modal() { //component\n  return (\n    <div className=\"modal\"> \n      <h2>제목</h2>\n      <p>날씨</p>\n      <p>상세내용</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport PostComponent from './App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n"],"sourceRoot":""}